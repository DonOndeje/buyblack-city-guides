[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.agency]
version = "0.0.2"

[project]
name = "buyblack-city-guides"
version = "1.0.0"
description = "AI-powered city guides for discovering Black-owned businesses and cultural experiences"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }

authors = [
    { name = "BuyBlack", email = "contact@buyblack.com" },
]

keywords = ["ai", "city-guides", "black-owned-businesses", "travel", "culture"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "agency-swarm[fastapi]>=1.0.2",
    "fastapi",
    "uvicorn",
    "pandas",
    "requests",
    "python-dotenv",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio",
    "black",
    "flake8",
    "mypy",
]
test = [
    "pytest>=6.0",
    "pytest-asyncio",
    "httpx",
]

[project.urls]
Homepage = "https://github.com/buyblack/buyblack-city-guides"
Repository = "https://github.com/buyblack/buyblack-city-guides"
Issues = "https://github.com/buyblack/buyblack-city-guides/issues"

[project.scripts]
buyblack-guide = "main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["city_explorer*", "cultural_curator*", "itinerary_planner*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "agency_swarm.*",
    "fastapi.*",
    "uvicorn.*",
    "pandas.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
